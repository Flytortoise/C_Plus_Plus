
2017年7月13日 20:14:51

C++项目写完，以下做一个总结。


1. 时间
	7月5号，也就是上周三，开始写这个项目。
	周三：复习QT，MySql,json的基本操作,对项目进行整体，构思
	周四：正式开始写项目，当天的完成情况已经git
	周五：同上
	周六、周日上课
	周一：同周四
	周二：休息，算是睡了一天
	周三：下午完成项目

	总的来说这个项目从无到有，花了5天的时间，项目基本上按照计划上的要求来完成的。
	这5天时间，基本上从早上来教室，就开始写，一直到晚上回去，有点想以前写聊天室的时候。

2. 总结
	累了那么多天写完项目，首先要夸自己一下。我感觉到自己明显的进步。
	寒假写聊天室，可以说前几天都在做无用功。自己写的框架，写着写着就被自己推翻了，
	功能一个一个之间联系的比较紧密，当多线程的时候互相影响非常严重，感觉自己写出来的
	东西，像是在夹缝中求生存，能活下来真的是万幸。

	这次的C++银行管理系统，首先从难度上来说，并没有聊天室大，或许是我变厉害了。
	其次，在做这个项目之前，我用C++把聊天室改好了，而且改了相当长的时间，每天
	的修改都做了git。C++的聊天室，代码写的很冗余，好多重复的部分，也有好多没必要的部分，
	其实我就像拿C++聊天室，练练手，对C++和设计模式多多了解，反正单例模式，我是很熟悉了。
	而且我注意到单利模式居然可以实现信息的共享，static关键字会对多线程造成非常致命的影响。
	或许这些只有自己花了N多小时之后才有感悟的东西，老师以前讲过，但自己写完项目之后，感触非常深。
	至少我以后写单利模式都会带把锁了。
	C++聊天室写好之后，非常能感觉到面向对象的好处。在写完之后，虽然写的很多，但自己回想，整个代码
	结构非常清晰，这一特点也延续到了现在的项目。
	这次的银行管理系统，难就难在对数据包的处理。通过对json的学习，我发现，没必要像以前一样传输结构体。
	因为这种写法的缺陷太明显了：
		1.浪费空间
		2.把所有的信息放在一个结构体里，不安全
		3.只能处理定常数据

		现在我是这么处理传输信息：
		4字节操作信息+下一个信息长度(4字节)+不定常信息+.....
		在服务器接收之后，对4字节进行处理，执行对应操作，再读取剩下的内容，每次读取到长度，就申请一段
		对应长度空间，然后再读取，以此往复

		这样做也有缺陷，就是字符串太长，造成缓冲区不够。

		服务器也可以以同样的方式发送信息给客户端，但是我懒了，没高兴继续写。。。。

	最后说说自己的不足：
		1. 对设计模式研究的不够，银行的项目我用了单例模式，抽象工厂+反射机制，但这远远不够
		2. 对面向对象的理解不够。在写项目时候，我发现自己的思维还是很像面向过程。
			往往在自己需要什么，然后再写什么，解决对应的问题。
		3. 对C++的理解不够。很多时候不知道变量该用private放在class中，还是就定义局部变量，有时候很难抉择。
		4. 项目并没有写的非常完美，如果这个是工作，客户要求肯定没有完美达成








